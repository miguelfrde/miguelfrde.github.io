personal_projects:
  - name: Room Control
    image: roomcontrol.png
    period: Summer 2015
    description: >
      Application to control the lights of a room, play music, set up alarms
      and other things. The app was built with ionic and it connects to a
      Raspberry Pi running a microservices application built with nameko.
      Work in progress.
    link1:
      type: github
      url: https://github.com/miguelfrde/roomcontrol
      text: Mobile app
    link2:
      type: github
      url: https://github.com/miguelfrde/roomcontrol_backend
      text: Backend

  - name: Friendacity
    image: friendacity.png
    period: Fall 2012
    description: >
      I made this website with the goal of providing an easy way for Udacity
      MOOC students to know each other. In Friendacity, Udacity students can
      arrange meetups, find students who are similar (age, courses, country,
      etc.) to them and establish contact with them. Developed using Python,
      JavaScript + jQuery and deployed to Google App Engine. I have stopped
      working on this project.
    link1:
      type: website
      url: http://friendacity.appspot.com/

university_projects:
  - name: Handwritten Digit Recognition
    image: mlpnn.png
    period: Spring 2013
    description: >
      A Neural Network for recognizing digits. Simple implementation, trained
      using a small dataset generated using the training application that you
      can see on Github. Developed for the course Data Structures and
      Algorithms II.
    link1:
      type: github
      url: https://github.com/miguelfrde/MLPNN-for-handwritten-digit-recognition

  - name: Orkoraptor
    image: orkoraptor.png
    period: Fall 2012
    description: >
      Application to draw Flowcharts, run them and generate the code in Ruby,
      Java, Python and JavaScript. It allows to save the flowchart in .orko
      files and load those fiels via drag and drop. Written in Java. Developed
      with Mario Leal for the university course Object Oriented Programming.
    link1:
      type: download
      url: https://dl.dropboxusercontent.com/u/17055504/Orkoraptor.jar

  - name: Image Segmentation
    image: imageseg.png
    period: Fall 2014
    description: >
      Implementation of two image segmentation algorithms using Minimum Spanning
      Forests. The application allows to try different parameters to see their
      effects on the algorithms and compare them. Developed for the course Graph
      Theory, Networks and Applications during my exchange period at MDH.
    link1:
      type: website
      url: http://image-segmentation.herokuapp.com/
    link2:
      type: github
      url: https://github.com/miguelfrde/image-segmentation
    link3:
      type: report
      url: https://www.dropbox.com/s/gdtghavyyr1x7m1/report.pdf?dl=0

  - name: Gamie
    image: gamie.png
    period: Fall 2013
    description: >
      Application that allows teacher to setup great online courses and engages
      students who take them, thanks to gamification concepts like levels,
      achievements, lifes, etc. Built using Django. Developed with Fernando
      Padilla, Jorge Barba and Iván Alejandro Rojas for the course Software
      Design.
    link1:
      type: website
      url: http://gamie.herokuapp.com/

  - name: Rush Hour Solver
    image: solver.png
    period: Spring 2013
    description: >
      Application developed to compare three search algorithms (DFS, BFS and A*)
      for solving the puzzle RushHour (Unblock-Me). The heuristic used for A* is
      the number of blocks in front of the main block plus one. Written in Java.
      Developed with Jorge Barba for the course Data Structures and Algorithms
      II.
    link1:
      type: github
      url: https://github.com/miguelfrde/Solver

other_projects:
  - name: Community Detection
    period: Spring 2015
    description: >
      Description and implementation of three community detection algorithms:
      Girvan-Newman, Markov Clustering and Community Detection via Simulated
      Annealing. Done with Gina Ardavičiūtė as final project for the course
      Mathematics Behind Internet during my exchange period at MDH.
    link1:
      type: github
      url: https://github.com/miguelfrde/community-detection
    link2:
      type: report
      url: https://www.dropbox.com/s/jpd9r0zvs47ysd5/report.pdf?dl=0

  - name: Genetics
    period: Spring 2015
    description: >
      Implementation of a general genetic algorithm with examples for optimizing
      the travelling salesman problem and for training a feedforward multilayer
      perceptron neural network. Done as part of some assignments and project
      for the course Artificial Intelligence during my exchange period at MDH.
    link1:
      type: github
      url: https://github.com/miguelfrde/genetics

  - name: PyQuantum
    period: Fall 2014
    description: >
      Quantum computing library and Grover algorithm simulation. Developed for
      the course Quantum Computing and Information during my exchange period at
      MDH.
    link1:
      type: github
      url: https://github.com/miguelfrde/pyquantum
    link2:
      type: report
      url: https://www.dropbox.com/s/lse05hhthadgcur/report.pdf?dl=0

  - name: Sodascript
    period: Spring 2014
    description: >
      Simple compiler for a simple language that compiles to JavaScript.
      Developed in Ruby with Juanjo De Anda and Fernando Padilla for the course
      Compilers.
    link1:
      type: github
      url: https://github.com/miguelfrde/sodascript

  - name: OpenAutomata
    period: Fall 2013
    description: >
      Small automata theory library part of a project for the course Automata
      Theory. The library includes regular expressions, deterministic and non
      deterministic finite automata and context-free grammars. Developed with
      Jorge Barba.
    link1:
      type: github
      url: https://github.com/miguelfrde/openautomata

  - name: MicroTweetPi
    period: Fall 2013
    description: >
      System to tweet from a 8052 microcontroller (we used an AT89C52) via a
      Raspberry Pi. The code running on the 8052 was written in Assembly and the
      code running on the Raspberry Pi was written in Python. Developed with
      Jorge Barba and Mario Leal as a final project for the course
      Microprocessor Foundations.
    link1:
      type: video
      url: https://www.youtube.com/watch?v=gM0OElgYgY0
